{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifts.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respu","json","data","imgGifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","objeto","setObjeto","useEffect","then","imgs","useFetchGifts","GifExpertApp","elementsArray","setElementsArray","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAG3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,GACxBR,GAAgB,SAAES,GAAF,OAAaP,GAAb,mBAA4BO,QAKhD,SACG,uBACCC,KAAO,OACPC,MAAUT,EACVU,SAjBkB,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,+BCPnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,8DAECI,MAAOF,GAFR,cAEbG,EAFa,gBAGIA,EAAMC,OAHV,uBAGXC,EAHW,EAGXA,KAIFC,EAAUD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACHC,GAAQD,EAAIC,GACZC,MAAQF,EAAIE,MACZV,IAAG,UAAKQ,EAAIG,cAAT,aAAK,EAAYC,iBAAiBZ,QAX1B,kBAgBZM,GAhBY,4CAAH,sDCAPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAGtC,OACI,sBAAKc,UAAW,OAAhB,UACI,qBACGC,IAAQf,EACRgB,IAAQN,IAEX,kCAAMA,EAAN,WCPCO,EAAU,SAAC,GAAmB,IAAhBnB,EAAe,EAAfA,SAEvB,ECHyB,SAAEA,GAE3B,MAA4Bd,mBAAS,CACjCqB,KAAY,GACZa,SAAY,IAFhB,mBAAOC,EAAP,KAAeC,EAAf,KAiBA,OAXAC,qBAAW,WACPxB,EAASC,GACRwB,MAAM,SAAAC,GACHH,EAAW,CACPf,KAAYkB,EACZL,SAAY,SAGrB,CAAEpB,IAGEqB,EDhB0BK,CAAgB1B,GAApCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,mCAAOpB,KACLoB,GAAW,2CACb,qBAAKJ,UAAY,kDAAjB,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAGSA,GAFEA,EAAIC,aEZ9BgB,EAAe,WAExB,MAA0CzC,mBAAS,CAAC,SAApD,mBAAO0C,EAAP,KAAsBC,EAAtB,KAGA,OACI,qCACI,8CACA,cAAC,EAAD,CAAa5C,cAAkB4C,IAC/B,uBAEA,6BAMQD,EAAcnB,KAAM,SAAAT,GAAQ,OACxB,cAAC,EAAD,CAEIA,SAAaA,GADLA,Y,MCjBpC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.714f4078.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories ( ( cate ) => [inputValue, ...cate ] );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n           <input\r\n            type = 'text' \r\n            value = { inputValue }\r\n            onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )  }&limit=9&api_key=27kZcVwPRlr5aG9gKt40s4nTsopn8HIX`;\r\n    const respu = await fetch (url);\r\n    const { data } = await respu.json();\r\n\r\n    // console.log(data);\r\n\r\n    const imgGifs = data.map((img) => {\r\n        return {\r\n            id:     img.id,\r\n            title:  img.title,\r\n            url:    img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    // console.log(imgGifs);\r\n\r\n    return imgGifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n\r\n    // console.log(id);\r\n    return (\r\n        <div className= \"card\">\r\n            <img \r\n               src = { url } \r\n               alt = { title }\r\n            />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifts';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifts ( category );\r\n    \r\n    return (\r\n        <>\r\n            <h3> { category }</h3>\r\n            { loading && <p> Cargando </p>}\r\n            <div className = \"card-grid animate__animated animate__backInDown\">\r\n                    {\r\n                        images.map( img  => (\r\n                            <GifGridItem \r\n                                key= { img.id }\r\n                                // img = { img }\r\n                                { ...img }\r\n                            />\r\n                        ))\r\n\r\n                        // images.map( img  => (\r\n                        //     <li key = { img.id }> {img.title }</li>\r\n                        // ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifts = ( category ) => {\r\n\r\n    const [objeto, setObjeto] = useState({\r\n        data:       [],\r\n        loading:    true\r\n\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n        .then( imgs => {\r\n            setObjeto ({\r\n                data:       imgs,\r\n                loading:    false\r\n            });\r\n        });\r\n    }, [ category ]);\r\n\r\n\r\n    return objeto; // { data : [] loading: true };\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [elementsArray, setElementsArray] = useState(['Goku']);\r\n \r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertapp</h2>\r\n            <AddCategory setCategories = { setElementsArray } />          \r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    // elementsArray.map( ( category, i) => {\r\n                    //     return <li key={ category } > { category } </li>\r\n                    // })\r\n                    \r\n                    elementsArray.map(  category  => (\r\n                        <GifGrid\r\n                            key = { category }\r\n                            category = { category }\r\n                        />\r\n                    ))\r\n\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}